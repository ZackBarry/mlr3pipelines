% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LearnerWeightedAverage.R
\docType{data}
\name{LearnerRegrWeightedAverage}
\alias{LearnerRegrWeightedAverage}
\alias{mlr_learners_regr.weightedaverage}
\title{Weighted Average of Features for Regression}
\format{\code{\link[R6:R6Class]{R6::R6Class()}} inheriting from \link[mlr3:LearnerRegr]{mlr3::LearnerRegr}.}
\usage{
LearnerRegrWeightedAverage
}
\description{
Computes a weighted average of inputs.
Used in the context of computing weighted averages of predictions.

If \code{weights.method} is "manual", the average is computed over weights provided by the user.
Predictions are averaged using \code{weights} (in order of appearance in the data); \code{weights} defaults to equal
weights for each feature.
For \code{weights.method}: "nloptr", nonlinear optimization from package "nloptr" is used to optimize weights
for a measure provided as \code{measure} (defaults to \code{regr.mse}).
Learned weights can be obtained from \code{.$model}.
}
\section{Parameter Set}{

\itemize{
\item \code{weights.method} :: \code{character(1)} \cr
\code{manual} allows to supply weights, for \code{nloptr} weights are automatically determined using \code{nloptr}?
Defaults to \code{manual}.
\item \code{weights} :: \code{numeric(1)} \cr
Numeric either of length 1 or the same length as the inputs. Defaults to 1.
\item \code{measure} :: \code{character(1) | MeasureClassif} \cr
Only for \code{weights.method = "nloptr"}. Measure to optimized weights for.
The Measure is either obtained from \code{mlr_measures} or directly supplied. Defaults to \code{classif.acc}.
\item \code{est_se} :: \code{character(1)} \cr
How to estimate standard error, if \code{predict_type} is \code{"se"}. Can be \code{"within"} (calculate SE from
input SEs; input data must contain \code{"se"}-prediction), \code{"between"} (calculate SE from SE of
predictions, does not need \code{"se"}-prediction of previous Learners), and \code{"both"} (square root of the sum
of the squared \code{"within"} and \code{"between"} se estimates).
\item \code{algorithm} :: \code{character(1)} \cr
Several nonlinear optimization methods from \code{nloptr} are available.
See \code{nloptr::nloptr.print.options()} for a list of possible options.
Note that we only allow for derivative free local or global algorithms, i.e.
NLOPT_(G|L)N_*.
}
}

\section{Methods}{

\itemize{
\item \code{LearnerRegrWeightedAverage$new(), id = "regr.weightedavg")} \cr
(\code{chr}) -> \code{self} \cr
Constructor.
}
}

\concept{LearnerRegr}
\keyword{datasets}
